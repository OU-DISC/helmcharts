{{- if eq .Values.app.ingress.enabled true }}
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ .Release.Name }}
  annotations:
    # kubernetes.io/ingress.class: nginx
    {{- include "nginx.annotations" . | nindent 4 }}
    {{- if eq .Values.app.ingress.auth.enabled true }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-realm: {{ .Values.app.ingress.auth.prompt | quote }}
    nginx.ingress.kubernetes.io/auth-secret: {{ .Values.app.ingress.auth.secret }}
    {{- end }}
    {{- if eq .Values.app.ingress.internal.enabled true }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.app.ingress.internal.whitelistSourceRange }}
    {{- end }}
    {{ tpl .Values.app.ingress.extraAnnotations $ | nindent 4 }}
  labels:
    {{- include "dbvis.labels" . | nindent 4 }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - {{ required ".Values.app.ingress.url is required" .Values.app.ingress.url }}
      secretName: {{ .Release.Name }}-tls
  rules:
      - host: {{ required ".Values.app.ingress.url is required" .Values.app.ingress.url }}
        http:
          paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: {{ .Release.Name }}
                  port:
                    name: http
{{- end }}
